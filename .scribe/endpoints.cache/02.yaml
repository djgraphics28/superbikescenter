## Autogenerated by Scribe. DO NOT MODIFY.

name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display a listing of the Product resource.

        This endpoint allows you to filter products by various criteria and paginate the results.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Search name.'
        required: false
        example: Laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      brand:
        name: brand
        description: 'The brand ID of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      category:
        name: category
        description: 'The category ID of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      min_price:
        name: min_price
        description: 'The minimum price of the product.'
        required: false
        example: '15000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      max_price:
        name: max_price
        description: 'The maximum price of the product.'
        required: false
        example: '300000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      name: Laptop
      brand: 1
      category: 1
      min_price: '15000'
      max_price: '300000'
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Product Name",
                "slug": "product-name",
                "price": 10000,
                "category_id": 1,
                "brand_id": 1,
                "created_at": "2024-07-26T00:00:00.000000Z",
                "updated_at": "2024-07-26T00:00:00.000000Z"
              }
            ],
            "links": {
              "first": "http://example.com/api/products?page=1",
              "last": "http://example.com/api/products?page=1",
              "prev": null,
              "next": null
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "path": "http://example.com/api/products",
              "per_page": 10,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/product/{slug}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display the specified product.

        This endpoint retrieves a specific product by its slug.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the product.'
        required: true
        example: product-name
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      slug: product-name
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Product Name",
              "slug": "product-name",
              "price": 10000,
              "category_id": 1,
              "brand_id": 1,
              "variations": [],
              "created_at": "2024-07-26T00:00:00.000000Z",
              "updated_at": "2024-07-26T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
